---
// src/components/Slides.astro
interface Props {
  images: string[];
}
const { images } = Astro.props;
---
<div class="reveal" style="width: 100%; height: 600px;">
  <div class="slides">
    {images.map(src => (
      <section>
        <img src={src} alt="Slide image" style="max-width: 100%; max-height: 100%; object-fit: contain;" />
      </section>
    ))}
  </div>
</div>

<!-- We need to import the CSS and initialize the library on the client -->
<link rel="stylesheet" href="/reveal.js/dist/reveal.css">
<link rel="stylesheet" href="/reveal.js/dist/theme/black.css">

<style>
  /* Override any conflicting styles */
  .reveal {
    position: relative !important;
    display: block !important;
    width: 100% !important;
    height: 600px !important;
  }
  .reveal .slides {
    display: block !important;
  }
  .reveal .slides section {
    display: none !important;
  }
  .reveal .slides section.present {
    display: block !important;
  }
</style>

<script src="/reveal.js/dist/reveal.js" is:inline></script>
<script is:inline>
  // Wait for DOM to be ready and ensure reveal.js loads
  function initializeReveal() {
    if (window.Reveal) {
      console.log('Initializing Reveal.js...');
      let deck = new window.Reveal(document.querySelector('.reveal'), {
        embedded: true,
        width: '100%',
        height: 600,
        controls: true,
        progress: true,
        center: true,
        transition: 'slide'
      });
      deck.initialize().then(() => {
        console.log('Reveal.js initialized successfully');
      });
    } else {
      console.log('Reveal.js not loaded, retrying...');
      setTimeout(initializeReveal, 100);
    }
  }
  
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeReveal);
  } else {
    initializeReveal();
  }
</script>